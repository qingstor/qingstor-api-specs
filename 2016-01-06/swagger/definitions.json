{
  "bucket": {
    "description": "Bucket",
    "type": "object",
    "properties": {
      "location": {
        "description": "QingCloud Zone ID",
        "type": "string"
      },
      "name": {
        "description": "Bucket name",
        "type": "string"
      },
      "url": {
        "description": "URL to access the bucket",
        "type": "string"
      },
      "created": {
        "description": "Created time of the bucket",
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "key": {
    "description": "Object key",
    "type": "object",
    "properties": {
      "key": {
        "description": "Object key",
        "type": "string"
      },
      "mime_type": {
        "description": "MIME type of the object",
        "type": "string"
      },
      "etag": {
        "description": "MD5sum of the object",
        "type": "string"
      },
      "size": {
        "description": "Object content size",
        "type": "integer",
        "format": "int64"
      },
      "modified": {
        "description": "Last modified time in unix time format",
        "type": "integer"
      },
      "encrypted": {
        "description": "Whether this key is encrypted",
        "type": "boolean"
      },
      "created": {
        "description": "Object created time",
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "owner": {
    "description": "Bucket owner",
    "type": "object",
    "properties": {
      "id": {
        "description": "User ID",
        "type": "string"
      },
      "name": {
        "description": "Username",
        "type": "string"
      }
    }
  },
  "acl": {
    "description": "Bucket ACL rule",
    "type": "object",
    "properties": {
      "grantee": {
        "$ref": "#/definitions/grantee"
      },
      "permission": {
        "description": "Permission for this grantee",
        "type": "string",
        "enum": [
          "READ",
          "WRITE",
          "FULL_CONTROL"
        ]
      }
    },
    "required": [
      "grantee",
      "permission"
    ]
  },
  "grantee": {
    "description": "Grantee rules",
    "type": "object",
    "properties": {
      "type": {
        "description": "Grantee type",
        "type": "string",
        "enum": [
          "user",
          "group"
        ]
      },
      "id": {
        "description": "Grantee user ID",
        "type": "string"
      },
      "name": {
        "description": "Grantee group name",
        "type": "string"
      }
    },
    "required": [
      "type"
    ]
  },
  "cors_rule": {
    "description": "Bucket CORS rule",
    "type": "object",
    "properties": {
      "allowed_origin": {
        "description": "Allowed origin",
        "type": "string"
      },
      "allowed_methods": {
        "description": "Allowed methods",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "GET",
            "PUT",
            "POST",
            "DELETE",
            "HEAD"
          ]
        }
      },
      "allowed_headers": {
        "description": "Allowed headers",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "expose_headers": {
        "description": "Expose headers",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "max_age_seconds": {
        "description": "Max age seconds",
        "type": "integer"
      }
    },
    "required": [
      "allowed_origin",
      "allowed_methods"
    ]
  },
  "statement": {
    "description": "Bucket policy statement",
    "type": "object",
    "properties": {
      "id": {
        "description": "Bucket policy id, must be unique",
        "type": "string"
      },
      "user": {
        "description": "The user to apply bucket policy",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "action": {
        "description": "QingStor API methods",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "list_objects",
            "head_bucket",
            "get_bucket_stats",
            "get_object",
            "create_object",
            "delete_object",
            "head_object",
            "list_multipart",
            "upload_multipart",
            "abort_multipart",
            "initiate_multipart",
            "complete_multipart"
          ]
        }
      },
      "effect": {
        "description": "Statement effect",
        "type": "string",
        "enum": [
          "allow",
          "deny"
        ]
      },
      "resource": {
        "description": "The resources to apply bucket policy",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "condition": {
        "$ref": "#/definitions/condition"
      }
    },
    "required": [
      "id",
      "user",
      "action",
      "effect"
    ]
  },
  "condition": {
    "description": "Bucket policy condition",
    "type": "object",
    "properties": {
      "string_like": {
        "$ref": "#/definitions/string_like"
      },
      "string_not_like": {
        "$ref": "#/definitions/string_not_like"
      },
      "ip_address": {
        "$ref": "#/definitions/ip_address"
      },
      "not_ip_address": {
        "$ref": "#/definitions/not_ip_address"
      },
      "is_null": {
        "$ref": "#/definitions/is_null"
      }
    }
  },
  "string_like": {
    "description": "String like rules",
    "type": "object",
    "properties": {
      "Referer": {
        "description": "Refer url",
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  },
  "string_not_like": {
    "description": "String not like rules",
    "type": "object",
    "properties": {
      "Referer": {
        "description": "Refer url",
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  },
  "ip_address": {
    "description": "IP address rules",
    "type": "object",
    "properties": {
      "source_ip": {
        "description": "Source IP",
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  },
  "not_ip_address": {
    "description": "Not IP address rules",
    "type": "object",
    "properties": {
      "source_ip": {
        "description": "Source IP",
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  },
  "is_null": {
    "description": "Check whether is null",
    "type": "object",
    "properties": {
      "Referer": {
        "description": "Refer url",
        "type": "boolean"
      }
    }
  },
  "object_part": {
    "type": "object",
    "properties": {
      "part_number": {
        "description": "Object part number",
        "type": "integer",
        "default": 0
      },
      "size": {
        "description": "Object part size",
        "type": "integer",
        "format": "int64"
      },
      "etag": {
        "description": "MD5sum of the object part",
        "type": "string"
      },
      "created": {
        "description": "Object part created time",
        "type": "string",
        "format": "date-time"
      }
    },
    "required": [
      "part_number"
    ]
  },
  "key_delete_error": {
    "type": "object",
    "properties": {
      "key": {
        "description": "Object key",
        "type": "string"
      },
      "code": {
        "description": "Error code",
        "type": "string"
      },
      "message": {
        "description": "Error message",
        "type": "string"
      }
    }
  },
  "uploads": {
    "type": "object",
    "properties": {
      "created": {
        "description": "Object part created time",
        "type": "string",
        "format": "date-time"
      },
      "key": {
        "description": "Object key",
        "type": "string"
      },
      "upload_id": {
        "description": "Object upload id",
        "type": "string"
      }
    }
  },
  "rule": {
    "type": "object",
    "properties": {
      "id": {
        "description": "rule id",
        "type": "string"
      },
      "status": {
        "description": "rule status",
        "type": "string",
        "enum": [
          "enabled",
          "disabled"
        ]
      },
      "filter": {
        "$ref": "#/definitions/filter"
      },
      "expiration": {
        "$ref": "#/definitions/expiration"
      },
      "abort_incomplete_multipart_upload": {
        "$ref": "#/definitions/abort_incomplete_multipart_upload"
      },
      "transition": {
        "$ref": "#/definitions/transition"
      }
    },
    "required": [
      "id",
      "status",
      "filter"
    ]
  },
  "filter": {
    "type": "object",
    "properties": {
      "prefix": {
        "description": "Prefix matching",
        "type": "string"
      }
    },
    "required": [
      "prefix"
    ]
  },
  "expiration": {
    "type": "object",
    "properties": {
      "days": {
        "description": "days",
        "type": "integer"
      }
    }
  },
  "abort_incomplete_multipart_upload": {
    "type": "object",
    "properties": {
      "days_after_initiation": {
        "description": "days after initiation",
        "type": "integer"
      }
    },
    "required": [
      "days_after_initiation"
    ]
  },
  "transition": {
    "type": "object",
    "properties": {
      "days": {
        "description": "days",
        "type": "integer"
      },
      "storage_class": {
        "description": "storage class",
        "type": "integer"
      }
    },
    "required": [
      "storage_class"
    ]
  },
  "notification": {
    "type": "object",
    "properties": {
      "id": {
        "description": "notification id",
        "type": "string"
      },
      "event_types": {
        "description": "event types",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "create_object",
            "delete_object",
            "abort_multipart",
            "complete_multipart"
          ]
        }
      },
      "object_filters": {
        "description": "Object name matching rule",
        "type": "string"
      },
      "cloudfunc": {
        "description": "Event processing service",
        "type": "string",
        "enum": [
          "tupu-porn",
          "notifier",
          "image"
        ]
      },
      "cloudfunc_args": {
        "$ref": "#/definitions/cloudfunc_args"
      },
      "notify_url": {
        "description": "notify url",
        "type": "string"
      }
    },
    "required": [
      "id",
      "event_types",
      "cloudfunc"
    ]
  },
  "cloudfunc_args": {
    "type": "object",
    "properties": {
      "action": {
        "type": "string"
      },
      "key_prefix": {
        "type": "string",
        "default": "gen"
      },
      "key_seprate": {
        "type": "string",
        "default": "_"
      },
      "save_bucket": {
        "type": "string"
      }
    },
    "required": [
      "action"
    ]
  } 
}
